{"version":3,"sources":["challenges/MarkdownPreviewer/Editor.js","challenges/MarkdownPreviewer/Preview.js","challenges/MarkdownPreviewer/initialText.js","helpers/index.js","challenges/MarkdownPreviewer/index.js","components/App.js","index.js"],"names":["Editor","props","react_default","a","createElement","className","value","text","onChange","name","id","Preview","html","arguments","length","undefined","document","getElementById","innerHTML","this","setInnerHTML","React","Component","initialText","loaded","marked","setOptions","breaks","highlight","code","hljs","highlightAuto","MarkdownPreviewer","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","markdown","onTextChange","bind","assertThisInitialized","setMarkdownText","e","setState","target","show","url","script","src","head","appendChild","addFccScript","class","Preview_Preview","App","StrictMode","MarkdownPreviewer_MarkdownPreviewer","ReactDOM","render","App_App"],"mappings":"iSAEeA,EAAA,SAACC,GACZ,OACIC,EAAAC,EAAAC,cAAA,WAASC,UAAU,UACfH,EAAAC,EAAAC,cAAA,YACIE,MAAOL,EAAMM,KACbC,SAAUP,EAAMO,SAChBC,KAAK,GACLC,GAAG,aCPEC,uLAEHC,GAAsB,IAAhBF,EAAgBG,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAX,UACrBG,SAASC,eAAeP,GAAIQ,UAAYN,8CAGxCO,KAAKC,aAAaD,KAAKlB,MAAMW,mDAG7BO,KAAKC,aAAaD,KAAKlB,MAAMW,uCAG7B,OACIV,EAAAC,EAAAC,cAAA,WAASC,UAAU,WACfH,EAAAC,EAAAC,cAAA,OAAKM,GAAG,oBAdaW,IAAMC,WCF7BC,EAAA,ybCAVC,EAAS,GCQbC,IAAOC,WAAW,CACdC,QAAQ,EACRC,UAAW,SAASC,GAChB,OAAOC,IAAKC,cAAcF,UAIbG,cACjB,SAAAA,EAAY/B,GAAO,IAAAgC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAf,KAAAa,IACfC,EAAAC,OAAAE,EAAA,EAAAF,CAAAf,KAAAe,OAAAG,EAAA,EAAAH,CAAAF,GAAAM,KAAAnB,KAAMlB,KACDsC,MAAQ,CACThC,KAAMgB,EACNiB,SAAU,IAEdP,EAAKQ,aAAeR,EAAKQ,aAAaC,KAAlBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KACpBA,EAAKW,gBAAkBX,EAAKW,gBAAgBF,KAArBR,OAAAS,EAAA,EAAAT,QAAAS,EAAA,EAAAT,CAAAD,KAPRA,4EAULY,GACV1B,KAAK2B,SAAS,CAAEvC,KAAMsC,EAAEE,OAAOzC,QAC/Ba,KAAKyB,gBAAgBC,EAAEE,OAAOzC,+CAGjBC,GACbY,KAAK2B,SAAS,CAAEN,SAAUf,IAAOlB,iDAI7BY,KAAKlB,MAAM+C,QDlChB,WACH,IAAIC,EAAM,kEAEV,IAAKzB,EAAOyB,GAAc,CACtB,IAAIC,EAASlC,SAASZ,cAAc,UACpC8C,EAAOC,IAAMF,EACbjC,SAASoC,KAAKC,YAAYH,GAC1B1B,EAAOyB,IAAO,GC4BVK,GACAnC,KAAKyB,gBAAgBzB,KAAKoB,MAAMhC,wCAKpC,OAAIY,KAAKlB,MAAM+C,KAEP9C,EAAAC,EAAAC,cAAA,OAAKmD,MAAM,aACPrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACXH,EAAAC,EAAAC,cAACJ,EAAD,CAAQO,KAAOY,KAAKoB,MAAMhC,KAAOC,SAAWW,KAAKsB,eACjDvC,EAAAC,EAAAC,cAACoD,EAAD,CAAS5C,KAAOO,KAAKoB,MAAMC,aAK9BtC,EAAAC,EAAAC,cAAA,yBAtC0BiB,IAAMC,WCVhCmC,kMAEb,OACIvD,EAAAC,EAAAC,cAACF,EAAAC,EAAMuD,WAAP,KACIxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACXH,EAAAC,EAAAC,cAACuD,EAAD,CAAmBX,MAAM,aALZ3B,IAAMC,YCDvCsC,IAASC,OAAO3D,EAAAC,EAAAC,cAAC0D,EAAD,MAAS9C,SAASC,eAAe","file":"static/js/main.84f4d0d5.chunk.js","sourcesContent":["import React from 'react'\n\nexport default (props) => {\n    return (\n        <section className=\"Editor\">\n            <textarea\n                value={props.text}\n                onChange={props.onChange}      \n                name=\"\"\n                id=\"editor\"></textarea>\n        </section>\n    )\n}","import React from 'react'\n\nexport default class Preview extends React.Component {\n\n    setInnerHTML (html, id = 'preview') {\n        document.getElementById(id).innerHTML = html        \n    }\n    componentDidMount () {\n        this.setInnerHTML(this.props.html)\n    }\n    componentDidUpdate () {\n        this.setInnerHTML(this.props.html)\n    }\n    render () {\n        return (\n            <section className=\"Preview\">\n                <div id=\"preview\">\n                </div>\n            </section>\n        )\n    }\n}","export default\n`\n# MarkdownPreviewer\n## Created for the FCC Challenges Curriculum\n\nYou can use \\`inline-code\\` as *well*\n\n**CODE BLOCKS**\n\\`\\`\\`\n// Or some code blocks!!\n// This is fun!!\n\\`\\`\\`\n- You will see how easy it is to use it.\n- Have fun with it.\n\n**BLOCKQUOTES**:\n>This is a blockquote\n\n**IMAGES**\n\n![Mangos!!](https://www.dropbox.com/s/nps9y37zj6bi5if/mangueria.png?raw=1)\n\nThanks [FreeCodeCamp](https://learn.freecodecamp.org/)!\n`","let loaded = {}\n\nexport function addFccScript() {\n    let url = 'https://cdn.freecodecamp.org/testable-projects-fcc/v1/bundle.js'\n    // let url = null\n    if (!loaded[url] && url)  {\n        let script = document.createElement('script');\n        script.src = url;\n        document.head.appendChild(script);\n        loaded[url] = true;\n    }\n}\n","import React from 'react'\nimport marked from 'marked'\nimport hljs from 'highlight.js'\nimport Editor from './Editor'\nimport Preview from './Preview'\nimport initialText from './initialText'\nimport { addFccScript } from '../../helpers'\n\nmarked.setOptions({\n    breaks: true,\n    highlight: function(code) {\n        return hljs.highlightAuto(code)\n    }\n})\n\nexport default class MarkdownPreviewer extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            text: initialText,\n            markdown: ''\n        }\n        this.onTextChange = this.onTextChange.bind(this)\n        this.setMarkdownText = this.setMarkdownText.bind(this)\n    }\n\n    onTextChange (e) {\n        this.setState({ text: e.target.value })\n        this.setMarkdownText(e.target.value)\n    }\n\n    setMarkdownText (text) {\n        this.setState({ markdown: marked(text) })\n    }\n\n    componentDidMount() {\n        if (this.props.show) {\n            addFccScript()\n            this.setMarkdownText(this.state.text)\n        }\n    }\n\n    render() {\n        if (this.props.show) {\n            return (\n                <div class=\"container\">\n                    <div className=\"FCC__MarkdownPreviewer\">\n                        <Editor text={ this.state.text } onChange={ this.onTextChange }/>\n                        <Preview html={ this.state.markdown } />\n                    </div>\n                </div>\n            )\n        } else {\n            return ( <h1>NADA</h1> )\n        }\n    }\n}","import React from 'react'\nimport MarkdownPreviewer from '../challenges/MarkdownPreviewer'\nimport '../assets/css/resetStyles.css'\nimport '../assets/css/styles.css'\n\nexport default class App extends React.Component {\n    render() {\n        return (\n            <React.StrictMode>\n                <div className=\"container__challenge\">\n                    <MarkdownPreviewer show={true}/>                \n                </div>\n            </React.StrictMode>\n        )\n    }\n}","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}